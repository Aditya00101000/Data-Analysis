# -*- coding: utf-8 -*-
"""SuperStore_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x9UNWv-PJMwMyIttvyoA5ClUnRhGSliQ
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

pd.set_option("display.max_column",24)

dataset = pd.read_excel("Superstore_USA.xlsx")

dataset.head(2)

dataset['Order year'] = dataset['Order Date'].dt.year

dataset.shape

dataset.isnull().sum()

dataset['Product Base Margin'].fillna(dataset['Product Base Margin'].mean(),inplace=True)

dataset['State or Province'].value_counts()[:5]

plt.figure(figsize=(6,4))
sns.barplot(x ="Product Category", y ="Profit",data=dataset,estimator='sum')
plt.show()



dataset.info()

dataset['Order year'].value_counts()

plt.figure(figsize=(5,4))
sns.countplot(x = "Order year",data=dataset,color='#C36830')
plt.show()

"""# Product Category"""

plt.figure(figsize=(5,4))
sns.countplot(x = "Product Category",data=dataset,color='#C36839')
plt.show()



"""# Customer Segment"""

plt.figure(figsize=(5,4))
sns.countplot(x = "Customer Segment",data=dataset,color='green')
plt.show()

plt.figure(figsize=(10,6))
sns.countplot(x = "Product Category",data=dataset[dataset["Product Category"]=="Office Supplies"],hue = "Product Sub-Category")
plt.show()

"""# **SHIP MODE**"""

dataset['Ship Mode'].value_counts()

x =dataset['Ship Mode'].value_counts().index
y =dataset['Ship Mode'].value_counts().values

plt.figure(figsize=(5,4))
plt.pie(y,labels=x,startangle = 60,autopct= "%0.2f%%")
plt.legend(loc=2)
plt.show()

plt.figure(figsize=(5,4))
sns.countplot(x = "Ship Mode",data=dataset,hue="Product Category")
plt.show()

"""# **Order Priority**"""

dataset ['Order Priority'].value_counts()

plt.figure(figsize=(5,3))
sns.countplot(x= "Order Priority",data=dataset)
plt.title("Count of Order Priority")
plt.savefig("Count of Order Priority.jpg")
plt.show()

dataset ['Order Priority'].unique()

dataset ['Order Priority'] = dataset ['Order Priority'].replace("Critical","Critical")

avg_profit = dataset.groupby('Region')['Profit'].mean()
avg_profit.plot(kind='bar')
plt.xlabel('Region')
plt.ylabel('Average Profit')
plt.title('Average Profit by Region')
plt.show()

import matplotlib.pyplot as plt

total_sales = dataset.groupby('Product Category')['Sales'].sum()
total_sales.plot(kind='bar', color='#FF6969')
plt.xlabel('Product Category')
plt.ylabel('Total Sales')
plt.title('Total Sales by Product Category')
plt.show()

order_priority_counts = dataset['Order Priority'].value_counts()
order_priority_counts.plot(kind='pie', autopct='%1.1f%%', colors=['#ff9999','#66b3ff','#99ff99','#ffcc99'])
plt.ylabel('')
plt.title('Distribution of Order Priority')
plt.show()

dataset['Order Date'] = pd.to_datetime(dataset['Order Date'])
sales_over_time = dataset.groupby('Order Date')['Sales'].sum()
sales_over_time.plot(kind='line', color='#C738BD')
plt.xlabel('Order Date')
plt.ylabel('Total Sales')
plt.title('Sales Over Time')
plt.show()

corr_matrix = dataset[['Discount', 'Unit Price', 'Profit']].corr()
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.show()

sns.boxplot(x='Ship Mode', y='Shipping Cost', data=dataset, palette='Set2')
plt.title('Shipping Cost by Ship Mode')
plt.show()

total_quantity = dataset.groupby('Customer Segment')['Quantity ordered new'].sum()
total_quantity.plot(kind='bar', color='purple')
plt.xlabel('Customer Segment')
plt.ylabel('Total Quantity Ordered')
plt.title('Total Quantity Ordered by Customer Segment')
plt.show()

dataset['Profit'].plot(kind='hist', bins=30, color='#FC819E')
plt.xlabel('Profit')
plt.title('Profit Distribution')
plt.show()

plt.scatter(dataset['Unit Price'], dataset['Profit'], color='#C39898', alpha=0.5)
plt.xlabel('Unit Price')
plt.ylabel('Profit')
plt.title('Unit Price vs Profit')
plt.show()

base_margin_stats = dataset.groupby('Product Category')['Product Base Margin'].agg(['mean', 'median', 'min', 'max'])
print(base_margin_stats)

top_products = dataset.groupby('Product Name')['Sales'].sum().nlargest(10)
top_products.plot(kind='barh', color='#756AB6')
plt.xlabel('Total Sales')
plt.title('Top 10 Products by Total Sales')
plt.show()

ship_mode_region = dataset.groupby(['Region', 'Ship Mode']).size().unstack()
ship_mode_region.plot(kind='bar', stacked=True, color=['#891652','#80BCBD','#FF6969','#F2D8D8'])
plt.xlabel('Region')
plt.ylabel('Count of Orders')
plt.title('Count of Orders by Ship Mode in Each Region')
plt.show()

pivot_table = pd.pivot_table(dataset, values=['Sales', 'Profit'], index='Region', columns='Customer Segment', aggfunc='sum')
print(pivot_table)

sns.pairplot(dataset[['Sales', 'Profit', 'Discount']], diag_kind='kde', plot_kws={'alpha':0.5, 's':30})
plt.suptitle('Scatter Plot Matrix of Sales, Profit, and Discount', y=1.02)
plt.show()

region_sales_profit = dataset.groupby('Region')[['Sales', 'Profit']].sum()
region_sales_profit.plot(kind='bar', color=['#EF9C66', '#FCDC94'])
plt.xlabel('Region')
plt.ylabel('Amount')
plt.title('Total Sales and Profit by Region')
plt.show()

subcategory_region_profit = dataset.pivot_table(values='Profit', index='Product Sub-Category', columns='Region', aggfunc='mean')
sns.heatmap(subcategory_region_profit, annot=True, cmap='viridis')
plt.title('Average Profit for Each Product Sub-Category Across Regions')
plt.show()

dataset['Order Date'] = pd.to_datetime(dataset['Order Date'])
sales_profit_time = dataset.groupby('Order Date')[['Sales', 'Profit']].sum()

fig, ax1 = plt.subplots()

ax1.set_xlabel('Order Date')
ax1.set_ylabel('Sales', color='tab:blue')
ax1.plot(sales_profit_time.index, sales_profit_time['Sales'], color='#78ABA8')
ax1.tick_params(axis='y', labelcolor='#78ABA8')

ax2 = ax1.twinx()
ax2.set_ylabel('Profit', color='tab:green')
ax2.plot(sales_profit_time.index, sales_profit_time['Profit'], color='#C8CFA0')
ax2.tick_params(axis='y', labelcolor='#C8CFA0')

plt.title('Sales and Profit Over Time')
fig.tight_layout()
plt.show()

from wordcloud import WordCloud

text = ' '.join(dataset['Product Name'].dropna())
wordcloud = WordCloud(width=800, height=400, background_color='black', colormap='viridis').generate(text)

plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title('Word Cloud of Product Names')
plt.show()

# Convert 'Order Date' to datetime if not already done
dataset['Order Date'] = pd.to_datetime(dataset['Order Date'])

# Melt the dataframe to long format for seaborn
dataset_melted = dataset.melt(id_vars=['Region', 'Product Category'],
                    value_vars=['Sales', 'Profit', 'Discount'],
                    var_name='Metric',
                    value_name='Value')

# Create the facet grid plot with swarm plots
g = sns.FacetGrid(dataset_melted, col='Metric', hue='Region', col_wrap=3, height=5, aspect=1.5, sharex=False)
g.map(sns.swarmplot, 'Product Category', 'Value', order=sorted(dataset['Product Category'].unique()), palette='Set2', dodge=True)

# Adjust plot titles and labels
g.set_titles('{col_name}')
g.set_axis_labels('Product Category', 'Value')
g.add_legend()

plt.subplots_adjust(top=0.9)
g.fig.suptitle('Sales, Profit, and Discount Distribution Across Product Categories and Regions')
plt.show()

